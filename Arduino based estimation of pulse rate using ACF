%matlab code for pulse rate estimation using ppg signal using
%autocorrelation

clc;
clear all;
close all;

data=load("bidmc01m.mat");
x1=data.val(1,:);

subplot(4,1,1);
plot(x1);
hold on 
axis([0 1400 -20000 20000]);
title('the mat file');

%chebyshev filter
rp=input('enter the passband ripple:');
rs=input('enter the stopband ripple:');
wp=input('enter the passband frequency:');
ws=input('enter the stopband frequency:');
Fs=input('enter the sampling frequency:');
w1=2*wp/Fs;
w2=2*ws/Fs;
[n,wn]=cheb1ord(w1,w2,rp,rs);   %filter order
[b,a]=cheby1(n,rp,wn,'high');    %high
[H,w]=freqz(b,a,512);

subplot(4,1,2)
plot(w,abs(H));
xlabel('normalised frequency');
ylabel('abs(H)');
title('chebyshev HPF');

y=filtfilt(b,a,x1);
y=y/max(abs(y));   %normalisation

y1=xcorr(x1,x1);      %autocorrelation
figure;

subplot(4,1,3);
stem(fliplr(y1));
ylabel('amplitude');
xlabel('n->');
title('Output sequence');
disp('the resultant is ');
fliplr(y1);

th=input('enter the threshold:');%thershold
for i=1:length(y1)
    ntcr=0;
    if(y1(i)>th)&&(y1(i+1)<th)%find the negative threshod crossing point
        while(ntcr(i)<=y1(2))  %for first two -ve threshold crossing point
            Lmax=0;
            ntcr(i)=y1(i);
            Lmax=ntcr(i)-Lmax;
        end

    end 
end

PR=(Fs/Lmax)*60;
disp(PR);

figure
subplot(4,1,4);
plot(PR);
xlabel('time');
ylabel('amplitude');
title('pulse rate');
